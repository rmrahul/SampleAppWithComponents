//
//  LoginModels.swift
//  SampleAppWithComponents
//
//  Created by Rahul Mane on 20/09/19.
//  Copyright (c) 2019 developer. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Validator


enum Login{
    // MARK: Use cases
    enum UIComponents{
        case icon
        case email
        case password
        case multitextfields
        case radioGroup
        case radioGroupOneColumn
        case radioGroupWithOthers
        case forgotpassword
        case signInbutton
        case signInOption
        case socialMedia
        case signUpOption
        
        case multiTextField
        case nameOfSubject
        case age
        case gender
        case address
        case contact
        case religion
        case livingArrangement
        case familyMembers
        case educationStatus
        case martialStatus
        case ocuupation
        case montlyIncome
        case digosed
        case treatmentStarted
        case placeOfTreatment
        case typeOfMedication
        case numberOfTablet
        case dosageOfOralDrugs
        case dosageOfInsulin
        case recentSuguar
        case glycemicControl
        case dibeticHistory
        case coexistingIllness
        
    }
    
    enum UI{
        struct Request{}
        struct Response{
            var uiComponenets : [UIComponents]?
        }
        
        struct ViewModel{
            var cellConfigs : [(Login.UIComponents, BaseCellConfig)]?
        }
    }
    
    enum Validate{
        struct Request {
            var nameOfSubject : String?
            var gender : String?
            var contact : String?
            var religion : String?
            var livingArrangement : String?
            var educationStatus : String?
            var martialStatus : String?
            var occupation : String?
            
            init(nameOfSubject : String? = nil,gender : String? = nil,contact : String? = nil,religion : String? = nil, livingArrangement : String? = nil,educationStatus : String? = nil, martialStatus : String? = nil,occupation : String? = nil) {
                self.nameOfSubject = nameOfSubject
                self.gender = gender
                self.contact = contact
                self.religion = religion
                self.livingArrangement = livingArrangement
                self.educationStatus = educationStatus
                self.martialStatus = martialStatus
                self.occupation = occupation
            }
        }
        
        struct Response{
            var validationResultNameOfSubject : ValidationResult?
            var validationResultGender : ValidationResult?
            var validationResultContact : ValidationResult?
            var validationResultReligion : ValidationResult?
            var validationResultLiving : ValidationResult?
            var validationResultEducation : ValidationResult?
            var validationResultMaritialStatus : ValidationResult?
            var validationResultOccupation : ValidationResult?
        }
        
        struct ViewModel{
            var errorMessageForNameOfSubject : NSAttributedString?
            var errorMessageForGender : NSAttributedString?
            var errorMessageForContact : NSAttributedString?
            var errorMessageForReligion : NSAttributedString?
            var errorMessageForLiving : NSAttributedString?
            var errorMessageForEducation : NSAttributedString?
            var errorMessageForMaritialStatus : NSAttributedString?
            var errorMessageForOccupation : NSAttributedString?
        }
    }
    
    enum Something
    {
        struct Request
        {
        }
        struct Response
        {
        }
        struct ViewModel
        {
        }
    }
}
